knit('test.Rnw')
knit('test.r')
knit('knitr-minimal.Rnw')
library(knitr)
knit('knitr_test.Rnw')
library(plyr)
example(plyr)
hp_per_cyl <- function(hp, cyl, ...) hp / cyl
splat(hp_per_cyl)(mtcars[1,])
splat(hp_per_cyl)(mtcars)
ddply(mtcars, .(round(wt)),#
 function(df) mean_hp_per_cyl(df$hp, df$cyl))
ddply(mtcars, .(round(wt)),#
 function(df) hp_per_cyl(df$hp, df$cyl))
ddply(mtcars, .(round(wt)), splat(mean_hp_per_cyl))
pbinom(q=0, size=2e4, prob=1/4^7)
pbinom(q=0, size=2e4, prob=1/4^4)
install.packages(rWBclimate, dependencies=TRUE)
library(devtools)
?devtools
require(rWBclimate)
install_github('rWBclimate', 'ropensci')
library(rWBclimate)#
library(spocc)#
library(taxize)
dir.create("~/kmltmp")#
options(kmlpath = "~/kmltmp")#
options(stringsAsFactors = FALSE)#
#
usmex <- c(273:284, 328:365)#
### Download KML's and read them in.#
usmex.basin <- create_map_df(usmex)
temp.dat <- get_historical_temp(usmex, "decade")#
temp.dat <- subset(temp.dat, temp.dat$year == 2000)
usmex.map.df <- climate_map(usmex.basin, temp.dat, return_map = F)
Grab some species occurrence data for the 8 tree species.#
#
splist <- c("Acer saccharum", "Abies balsamea", "Arbutus xalapensis", "Betula alleghaniensis", #
    "Chilopsis linearis", "Conocarpus erectus", "Populus tremuloides", "Larix laricina")#
#
## get data from bison and gbif#
splist <- sort(splist)#
out <- occ(query = splist, from = c("bison", "gbif"), limit = 100)#
#
## scrub names#
out <- fixnames(out, how = "query")#
#
## Create a data frame of all data.#
#
out_df <- occ2df(out)
grab common names#
cname <- ldply(sci2comm(get_tsn(splist), db = "itis", simplify = TRUE), function(x) {#
    return(x[1])#
})[, 2]#
### Now let's create a vector of common names for easy plotting But first#
### order on names so we can just add the names#
out_df <- out_df[order(out_df$name), ]#
### strip NA values and 0 values of coordinates#
out_df <- out_df[!is.na(out_df$lat), ]#
out_df <- out_df[out_df$lat > 0, ]#
out_df$common <- rep(cname, table(out_df$name))
library(plyr)
grab common names#
cname <- ldply(sci2comm(get_tsn(splist), db = "itis", simplify = TRUE), function(x) {#
    return(x[1])#
})[, 2]#
### Now let's create a vector of common names for easy plotting But first#
### order on names so we can just add the names#
out_df <- out_df[order(out_df$name), ]#
### strip NA values and 0 values of coordinates#
out_df <- out_df[!is.na(out_df$lat), ]#
out_df <- out_df[out_df$lat > 0, ]#
out_df$common <- rep(cname, table(out_df$name))
out_df <- occ2df(out)
out <- fixnames(out, how = "query")
out
str(out)
out <- occ(query = splist, from = c("bison", "gbif"), limit = 100)#
#
> #
> ## scrub names#
> out <- fixnames(out, how = "query")
splist <- c("Acer saccharum", "Abies balsamea", "Arbutus xalapensis", "Betula alleghaniensis", #
    "Chilopsis linearis", "Conocarpus erectus", "Populus tremuloides", "Larix laricina")#
#
## get data from bison and gbif#
splist <- sort(splist)#
out <- occ(query = splist, from = c("bison", "gbif"), limit = 100)
out <- fixnames(out, how = "query")#
#
## Create a data frame of all data.#
#
out_df <- occ2df(out)
?occ2df
?fixnames
out <- fixnames(out, how = "query")$gbif
out_df <- occ2df(out)
cname <- ldply(sci2comm(get_tsn(splist), db = "itis", simplify = TRUE), function(x) {#
    return(x[1])#
})[, 2]
out_df <- out_df[order(out_df$name), ]#
### strip NA values and 0 values of coordinates#
out_df <- out_df[!is.na(out_df$lat), ]#
out_df <- out_df[out_df$lat > 0, ]#
out_df$common <- rep(cname, table(out_df$name))
outdf$name
out_df$name
cname
cname <- ldply(sci2comm(get_tsn(splist), db = "itis", simplify = TRUE), function(x) {#
    return(x[1])#
})[, 2]
out_df <- out_df[order(out_df$name), ]
out_df
out <- fixnames(out, how = "query")$gbif
out
out <- fixnames(out, how = "query")
out
out_df <- occ2df(out)$gbif
out_df
out_df <- occ2df(out)
out_df
out
out <- occ(query = splist, from = c("bison", "gbif"), limit = 100)
af_basin <- create_map_df(Africa_basin)
na_basin <- create_map_df(NoAm_basin)
ggplot(na_basin, aes(x = long, y = lat, group = group)) + geom_polygon() + theme_bw()
?taxize
library(taxize)
?taxize
mussel <- col_search(name='Unionidae')
mussel
downstream("Apis", db = 'col', downto = 'Species')
downstream("Unionidae", db = 'col', downto = 'Species')
x<-downstream("Unionidae", db = 'col', downto = 'Species')
y<-downstream("Unionidae", db = 'itis', downto = 'Species')
x
y
x
str(x)
str(y)
y<-downstream("Margartiferidae", db = 'col', downto = 'Species')
y<-downstream("Margertiferidae", db = 'col', downto = 'Species')
y<-downstream("Margaritiferidae", db = 'col', downto = 'Species')
y
strsplit(y$childtaxa_name, split=' ')
strsplit(y$childtaxa_name, split=\w)
strsplit(y$childtaxa_name, split='\w')
strsplit(y$childtaxa_name, split='\s')
noquote(strsplit("A text I want to display with spaces", NULL)[[1]])
noquote(strsplit("A text I want to display with spaces", NULL)
)
noquote(strsplit("A text I want to display with spaces", " ")
)
xv <- as.vector(y$childtaxa_name)
xv
y$childtaxa_name
y
str(y)
y$Margaritiferidae$childtaxa_name
strsplit(y$Margaritiferidae$childtaxa_name, split=' ')
unlist(strsplit(y$Margaritiferidae$childtaxa_name, split=' '))
?strsplit
?unlist
x<-downstream("Unionoidea", db = 'col', downto = 'Species')
x
x<-downstream("Unionoida", db = 'col', downto = 'Species')
x
z<-downstream("Unionoida", db = 'itis', downto = 'Species')
z
itis_taxrank(query= 906954)
itis_hierarchy(query= 906954)
itis_hierarchy(tsn= 906954)
col_children(name="Apis")
col_children(name="Unioinidae")
col_children(name="Unionidae")
get_tsn('Apis')
classification('Apis',db=col)
classification('Apis',db=itis)
classification('Apis',db='col')
unionid<-downstream("Unionidae", db = 'col', downto = 'Species')
unionid
write.csv(unionid$unionidae,file=unionidae.csv)
write.csv(unionid$unionidae,file='unionidae.csv')
unionid$unionidae
str(unionid)
unionid$unionidae[]
unionid$unionidae[[]]
unionid$unionidae$childtaxa_name
unionid$Unionidae
write.csv(unionid$Unionidae,file='unionidae.csv')
margar<-downstream("Margaritiferidae", db = 'col', downto = 'Species')
write.csv(margar$Margaritiferidae,file='margar.csv')
yax <- c('F','D','C','B','A')#
xax <- c(14,20,35,16,8)#
#
myBlue <- '#4292C6'#
myBlue2 <- '#2171B5'#
myOrange <- '#F16913'#
pdf('153exam1grades.pdf',width=4.5,height=2.5)#
op <- par(mar=c(0,2,0,3), font.main=1)#
bplt <- barplot(xax, horiz=TRUE, names.arg=yax, las=1, #
	axes=FALSE,#
	#main='Grade Distribution for Exam 1, Spring 2014', cex.main=0.9,#
	border=NA,#
	col=myBlue)#
text(x=xax+2,y=bplt, label=xax,xpd=TRUE, cex=1.2)#
#text(x=xax[5]+6.3,y=bplt[5], label=paste(as.character(xax[5]),'%', sep=''),xpd=TRUE)#
par(op)#
dev.off()#
[1] "#EFF3FF" "#C6DBEF" "#9ECAE1" "#6BAED6" "#4292C6" "#2171B5" "#084594"#
> #
grades <- read.csv('exams.csv',header=TRUE)#
myBlue <- '#4292C6'#
myBlue2 <- '#2171B5'#
myOrange <- '#F16913'#
#
xlabels <- c('Exam 1','Exam 2','Exam 3','Exam 4')#
pdf('153examgrades.pdf',width=4.5,height=2.5)#
op <- par(mar=c(2,3,0.5,0), font.main=1)#
boxplot(rev(grades), #
	las=1, #
	col=c(myBlue,myBlue,myBlue2,myBlue2), #
	horizontal=TRUE, #
	frame.plot=FALSE, #
	yaxt='n',#
	xaxt='n')#
axis(#
	side=2,#
	at=1:4,#
	labels=rev(xlabels), #
	las=1, lwd=0, #
	lwd.ticks=0, #
	mgp=c(0,0,0))#
axis(#
	side=1,#
	at=seq(20,100,by=20),#
	labels=seq(20,100,by=20),#
	lwd=0,#
	tck=0.02,#
	lwd.ticks=1,#
	mgp=c(0,0,0))#
abline(#
	v=67,#
	lwd=1,#
	col='white',#
	lty=1)#
par(op)#
dev.off()
yax <- c('F','D','C','B','A')#
xax <- c(14,20,35,16,8)#
#
myBlue <- '#4292C6'#
myBlue2 <- '#2171B5'#
myOrange <- '#F16913'#
pdf('153exam1grades.pdf',width=4.5,height=2.5)#
op <- par(mar=c(0,2,0,3), font.main=1)#
bplt <- barplot(xax, horiz=TRUE, names.arg=yax, las=1, #
	axes=FALSE,#
	#main='Grade Distribution for Exam 1, Spring 2014', cex.main=0.9,#
	border=NA,#
	col=myBlue)#
text(x=xax+2,y=bplt, label=xax,xpd=TRUE, cex=1.2)#
#text(x=xax[5]+6.3,y=bplt[5], label=paste(as.character(xax[5]),'%', sep=''),xpd=TRUE)#
par(op)#
dev.off()
x <- 10^3
x
yax <- c('F','D','C','B','A')#
xax <- c(21,31,34,25,12)#
#
myBlue <- '#4292C6'#
myBlue2 <- '#2171B5'#
myOrange <- '#F16913'#
pdf('153exam1grades.pdf',width=4.5,height=2.5)#
op <- par(mar=c(0,2,0,3), font.main=1)#
bplt <- barplot(xax, horiz=TRUE, names.arg=yax, las=1, #
	axes=FALSE,#
	#main='Grade Distribution for Exam 1, Spring 2014', cex.main=0.9,#
	border=NA,#
	col=myBlue)#
text(x=xax+2,y=bplt, label=xax,xpd=TRUE, cex=1.2)#
#text(x=xax[5]+6.3,y=bplt[5], label=paste(as.character(xax[5]),'%', sep=''),xpd=TRUE)#
par(op)#
dev.off()#
[1] "#EFF3FF" "#C6DBEF" "#9ECAE1" "#6BAED6" "#4292C6" "#2171B5" "#084594"#
> #
grades <- read.csv('exams.csv',header=TRUE)#
myBlue <- '#4292C6'#
myBlue2 <- '#2171B5'#
myOrange <- '#F16913'#
#
xlabels <- c('Exam 1','Exam 2','Exam 3','Exam 4')#
pdf('153examgrades.pdf',width=4.5,height=2.5)#
op <- par(mar=c(2,3,0.5,0), font.main=1)#
boxplot(rev(grades), #
	las=1, #
	col=c(myBlue,myBlue,myBlue2,myBlue2), #
	horizontal=TRUE, #
	frame.plot=FALSE, #
	yaxt='n',#
	xaxt='n')#
axis(#
	side=2,#
	at=1:4,#
	labels=rev(xlabels), #
	las=1, lwd=0, #
	lwd.ticks=0, #
	mgp=c(0,0,0))#
axis(#
	side=1,#
	at=seq(20,100,by=20),#
	labels=seq(20,100,by=20),#
	lwd=0,#
	tck=0.02,#
	lwd.ticks=1,#
	mgp=c(0,0,0))#
abline(#
	v=67,#
	lwd=1,#
	col='white',#
	lty=1)#
par(op)#
dev.off()
Curved Scores#
yax <- c('F','D','C','B','A')#
xax <- c(21,31,34,25,12)#
#
myBlue <- '#4292C6'#
myBlue2 <- '#2171B5'#
myOrange <- '#F16913'#
pdf('153exam1grades.pdf',width=4.5,height=2.5)#
op <- par(mar=c(0,2,0,3), font.main=1)#
bplt <- barplot(xax, horiz=TRUE, names.arg=yax, las=1, #
	axes=FALSE,#
	#main='Grade Distribution for Exam 1, Spring 2014', cex.main=0.9,#
	border=NA,#
	col=myBlue)#
text(x=xax+2,y=bplt, label=xax,xpd=TRUE, cex=1.2)#
#text(x=xax[5]+6.3,y=bplt[5], label=paste(as.character(xax[5]),'%', sep=''),xpd=TRUE)#
par(op)#
dev.off()
grades <- read.csv('exams.csv',header=TRUE)#
myBlue <- '#4292C6'#
myBlue2 <- '#2171B5'#
myOrange <- '#F16913'#
#
xlabels <- c('Exam 1','Exam 2','Exam 3','Exam 4')#
pdf('153examgrades.pdf',width=4.5,height=2.5)#
op <- par(mar=c(2,3,0.5,0), font.main=1)#
boxplot(rev(grades), #
	las=1, #
	col=c(myBlue,myBlue,myBlue2,myBlue2), #
	horizontal=TRUE, #
	frame.plot=FALSE, #
	yaxt='n',#
	xaxt='n')#
axis(#
	side=2,#
	at=1:4,#
	labels=rev(xlabels), #
	las=1, lwd=0, #
	lwd.ticks=0, #
	mgp=c(0,0,0))#
axis(#
	side=1,#
	at=seq(20,100,by=20),#
	labels=seq(20,100,by=20),#
	lwd=0,#
	tck=0.02,#
	lwd.ticks=1,#
	mgp=c(0,0,0))#
abline(#
	v=67,#
	lwd=1,#
	col='white',#
	lty=1)#
par(op)#
dev.off()
iris
climate <- read.csv('http://mtaylor4.semo.edu/~goby/biogeo/tutorialdata.csv')
climate
clear
rm(climate)
ls
ls()
3+2
A <- 3+2
A
a
B <- 4^2
B
C <- A + B
C
x <- rnorm(50)
x
plot(x)
length(x)
?length
x <- rnorm(100,mean=20,sd=2.5)
x
plot(x)
y <- rnorm(100, mean=15,sd=3)
y
plot(x,y)
hist(x)
data(iris)
iris
head(iris)
tail(iris)
nrow(iris)
ncol(iris)
dim(iris)
unique(iris$Species)
iris$Sepal.Length
mean(iris$Petal.Length)
mean(iris$Sepal.Width[iris$Species == `setosa'])
''
mean(iris$Sepal.Width[iris$Species == 'setosa'])
mean(iris$Sepal.Width[iris$Species == 'virginica'])
mean(iris$Sepal.Width[iris$Species == 'versicolor'])
iris.aov <- aov(Petal.Length ~ Species, data=iris)
iris.aov
summary(iris.aov)
plot(iris$Sepal.Length~iris$Petal.Length)
mean(iris$Sepal.Width[iris$Species == 'setosa'])
attach(iris)
mycolors <- c('purple4','orange2','green4')
plot(Petal.Length, Sepal.Length, col=mycolors)
plot(Petal.Length, Sepal.Length, col=mycolors[Species])
plot(Petal.Length, Sepal.Length, bg=mycolors[Species], pch=21) # ?pch
plot(Petal.Length, Sepal.Length, bg=mycolors[Species], pch=c(21,22,23)[Species])
plot(Petal.Length, Sepal.Length, bg=mycolors[Species], pch=c(21,22,23)[Species],xlab='Petal Length (cm)', ylab='Sepal Length (cm)')
plot(Petal.Length, Sepal.Length, bg=mycolors[Species], pch=c(21,22,23)[Species],xlab='Petal Length (cm)', ylab='Sepal Length (cm)', main = 'Sepal Length vs.Petal Length in 3 Species of Irises')
plot(Petal.Length, Sepal.Length, bg=mycolors[Species], pch=c(21,22,23)[Species],xlab='Petal Length (cm)', ylab='Sepal Length (cm)', main = 'Sepal Length vs. Petal Length in 3 Species of Irises')
text(5, 4.7, 'Your name\nYour partner's name', pos=4)
plot(Petal.Length, Sepal.Length, bg=mycolors[Species], pch=c(21,22,23)[Species],xlab='Petal Length (cm)', ylab='Sepal Length (cm)', main = 'Sepal Length vs. Petal Length in 3 Species of Irises')
text(5, 4.7, 'Your name\nYour partners name', pos=4)
demo(graphics)
demo(images)
demo(legend)
example(legend)
example(images)
climate <- read.csv('http://mtaylor4.semo.edu/~goby/biogeo/tutorialdata.csv')#
attach(climate)#
#
plot(MAT ~ MAP, xlab='Mean annual precipitation (mm)', ylab = 'Mean annual temperature', pch=c(21,22,25)[Species], bg=rainbow(8)[Ecosys], xlim=c(0,3500), ylim=c(-5,10))#
text(700, 4, 'Grassland', font=3, pos=4)#
text(1900,8, 'Redcedar', font=3, pos=4)#
text(700, -2.5, 'Larch', font=3, pos=4)#
#
legend(3100, 1, legend=c('A','B','C','D','E','F','G','H'), pch=c(25,22,21,22,22,21,25,25), col='black', pt.bg=rainbow(8))#
op <- par(cex=1, ps=12, family='serif', mar=c(5,5,3,3))#
plot(MAT ~ MAP, xlab='Mean annual precipitation (mm)', ylab = expression(paste('Mean annual temperature (',degree,'C)')), pch=c(21,22,25)[Species], bg=rainbow(8)[Ecosys], xlim=c(0,3500), ylim=c(-5,10))#
text(700, 4, 'Grassland', font=3, pos=4)#
text(1900,8, 'Redcedar', font=3, pos=4)#
text(700, -2.5, 'Larch', font=3, pos=4)
op <- par(cex=1, ps=12, family='serif', mar=c(5,5,3,3))#
plot(MAT ~ MAP, xlab='Mean annual precipitation (mm)', ylab = expression(paste('Mean annual temperature (',degree,'C)')), pch=c(21,22,25)[Species], bg=rainbow(8)[Ecosys], xlim=c(0,3500), ylim=c(-5,10))#
text(700, 4, 'Grassland', font=3, pos=4)#
text(1900,8, 'Redcedar', font=3, pos=4)#
text(700, -2.5, 'Larch', font=3, pos=4)#
#
#legend(2400, 2, legend=c('A','B','C','D','E','F','G','H'), pch=c(25,22,21,22,22,21,25,25), col='black', pt.bg=rainbow(8))#
#
par(op)
op <- par(cex=1, ps=12, family='serif', mar=c(5,5,3,3))#
plot(MAT ~ MAP, xlab='Mean annual precipitation (mm)', ylab = expression(paste('Mean annual temperature (',degree,'C)')), pch=c(21,22,25)[Species], bg=rainbow(8)[Ecosys], xlim=c(0,3500), ylim=c(-5,10))#
text(700, 4, 'Grassland', font=3, pos=4)#
text(1900,8, 'Redcedar', font=3, pos=4)#
text(700, -2.5, 'Larch', font=3, pos=4)#
#
#legend(2400, 2, legend=c('A','B','C','D','E','F','G','H'), pch=c(25,22,21,22,22,21,25,25), col='black', pt.bg=rainbow(8))#
#
par(op)
plot(MAT ~ MAP, xlab='Mean annual precipitation (mm)', ylab = 'Mean annual temperature', pch=c(21,22,25)[Species], bg=rainbow(8)[Ecosys], xlim=c(0,3500), ylim=c(-5,10))#
text(700, 4, 'Grassland', font=3, pos=4)#
text(1900,8, 'Redcedar', font=3, pos=4)#
text(700, -2.5, 'Larch', font=3, pos=4)
plot(MAT ~ MAP, xlab='Mean annual precipitation (mm)', ylab = expression(paste('Mean annual temperature (',degree,'C)')), pch=c(21,22,25)[Species], bg=rainbow(8)[Ecosys], xlim=c(0,3500), ylim=c(-5,10))#
text(700, 4, 'Grassland', font=3, pos=4)#
text(1900,8, 'Redcedar', font=3, pos=4)#
text(700, -2.5, 'Larch', font=3, pos=4)
setwd('biogeo')
plot(MAT ~ MAP, xlab='Mean annual precipitation (mm)', ylab = expression(paste('Mean annual temperature (',degree,'C)')), pch=c(21,22,25)[Species], bg=rainbow(8)[Ecosys], xlim=c(0,3500), ylim=c(-5,10))#
text(700, 4, 'Grassland', font=3, pos=4)#
text(1900,8, 'Redcedar', font=3, pos=4)#
text(700, -2.5, 'Larch', font=3, pos=4)
setwd{~/Documents/teach/438/ Units/0_R_Tutorial}
setwd(~/Documents/teach/438/ Units/0_R_Tutorial)
setwd(Users/goby/Documents/teach/438/ Units/0_R_Tutorial)
setwd(Users/goby/Documents/teach/438/ Units/0\_R\_Tutorial)
setwd(Users/goby/Documents/teach/438/Units/0_R_Tutorial)
setwd("/Users/goby/Documents/teach/438/Units/0_R_Tutorial")
knit(test.Rnw)
package(knit)
load(knitr)
load(knit)
load(knitr)
library(knitr)
knit(test.Rnw)
getwd()
knit()
?knit
x <- read.file(test.Rnw)
x <- read.text(test.Rnw)
x <- read(test.Rnw)
?read.csv
?knitr
?knit
f <- system.file('test.Rnw')
knit(f)
example(knit)
purl(f)
purl(f, documentation=2)
?knit
knit('test.Rnw')
knit('test.Rtex')
knit('test.Rtex')
getwd()
knit('test.Rtex')
knit('test.Rnw')
knit('test.Rtex')
knit('test.Rtex')
knit('test.Rtex')
knit('test.Rtex')
knit('rtut.Rtex')
knit('rtut.Rtex')
knit('rtut.Rtex')
knit('rtut.Rtex')
knit('rtut.Rtex')
knit('rtut.Rtex')
knit('rtut.Rtex')
knit('rtut.Rtex')
